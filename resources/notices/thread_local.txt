Thread Local
-----------------------------------------------------

Thread-local variables store a value of an attribute for each Thread that uses one of these
variables. You can read the value using the get() method and change the value using the
set() method.

The first time you access the value of a thread-local variable, if it has no value
for the Thread object that it is calling, the thread-local variable calls the initialValue()
method to assign a value for that Thread and returns the initial value.

private static ThreadLocal<Date> startDate = new ThreadLocal<Date>() {
 protected Date initialValue(){
  return new Date();
  }
};

The thread-local class also provides the remove() method that deletes the value stored in
the thread-local variable for the thread that it's calling.

Static always -
Because if it were an instance level field, then it would actually be "Per Thread - Per Instance", not just a guaranteed "Per Thread." That isn't normally the semantic you're looking for.
(http://stackoverflow.com/questions/2784009/why-should-java-threadlocal-variables-be-static)

The thread-local class also provides the remove() method that deletes the value stored in
the thread-local variable for the thread that it's calling.

The Java Concurrency API includes the InheritableThreadLocal class that provides
inheritance of values for threads created from a thread. If a thread A has a value in a threadlocal
variable and it creates another thread B, the thread B will have the same value as the
thread A in the thread-local variable. You can override the childValue() method that is
called to initialize the value of the child thread in the thread-local variable. It receives the
value of the parent thread in the thread-local variable as a parameter.

Conceptually, you can think of a ThreadLocal<T> as holding a Map<Thread,T> that stores the thread-specific
values, though this is not how it is actually implemented.

The thread-specific values are stored in the Thread object itself; when the thread terminates, the
thread-specific values can be garbage collected.

